model_checkpoint:
  _target_: pytorch_lightning.callbacks.ModelCheckpoint
  monitor: "otdd/pf_target_otdd_gap" # name of the logged metric which determines when model is improving
  mode: "min" # "max" means higher metric value is better, can be also "min"
  save_top_k: -1 # save k best models (determined by above metric)
  save_last: True # additionaly always save model from last epoch
  verbose: False
  dirpath: "checkpoints/"
  filename: "epoch_{epoch:03d}"
  auto_insert_metric_name: False

early_stopping:
  _target_: pytorch_lightning.callbacks.EarlyStopping
  monitor: "f_loss/f_y" # name of the logged metric which determines when model is improving
  mode: "max" # "max" means higher metric value is better, can be also "min"
  patience: 1000 # how many validation epochs of not improving until training stops
  min_delta: 0 # minimum change in the monitored metric needed to qualify as an improvement
  check_finite: True
  divergence_threshold: -50

lr_monitor:
  _target_: pytorch_lightning.callbacks.LearningRateMonitor
  logging_interval: "epoch"

rich_progress_bar:
  _target_: pytorch_lightning.callbacks.RichProgressBar

save_model:
  _target_: src.callbacks.save_callbacks.SaveCb

w2_table:
  _target_: src.callbacks.w2_callbacks.W2TableCb
  method: Gauss_origin
  data_type: points
  seed: ${seed}
